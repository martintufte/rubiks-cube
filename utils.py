import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle


_COLORS = {
  "U": "#FFFFFF",
  "F": "#00d800",
  "R": "#e00000",
  "B": "#1450f0",
  "L": "#ff7200",
  "D": "#ffff00",
  "G": "#606060",
}


_PERMUTATIONS = {
 'x': [9, 10, 11, 12, 13, 14, 15, 16, 17, 45, 46, 47, 48, 49, 50, 51, 52,
       53, 24, 21, 18, 25, 22, 19, 26, 23, 20,  8,  7,  6,  5,  4,  3,  2,
       1,  0, 38, 41, 44, 37, 40, 43, 36, 39, 42, 35, 34, 33, 32, 31, 30,
       29, 28, 27],
 'x2': [45, 46, 47, 48, 49, 50, 51, 52, 53, 35, 34, 33, 32, 31, 30, 29, 28,
        27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11,
        10,  9, 44, 43, 42, 41, 40, 39, 38, 37, 36,  0,  1,  2,  3,  4,  5,
        6,  7,  8],
 "x'": [35, 34, 33, 32, 31, 30, 29, 28, 27,  0,  1,  2,  3,  4,  5,  6,  7,
        8, 20, 23, 26, 19, 22, 25, 18, 21, 24, 53, 52, 51, 50, 49, 48, 47,
        46, 45, 42, 39, 36, 43, 40, 37, 44, 41, 38,  9, 10, 11, 12, 13, 14,
        15, 16, 17],
 'y': [6,  3,  0,  7,  4,  1,  8,  5,  2, 18, 19, 20, 21, 22, 23, 24, 25,
       26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
       43, 44,  9, 10, 11, 12, 13, 14, 15, 16, 17, 47, 50, 53, 46, 49, 52,
       45, 48, 51],
 'y2': [8,  7,  6,  5,  4,  3,  2,  1,  0, 27, 28, 29, 30, 31, 32, 33, 34,
        35, 36, 37, 38, 39, 40, 41, 42, 43, 44,  9, 10, 11, 12, 13, 14, 15,
        16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 53, 52, 51, 50, 49, 48,
        47, 46, 45],
 "y'": [2,  5,  8,  1,  4,  7,  0,  3,  6, 36, 37, 38, 39, 40, 41, 42, 43,
        44,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
        25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 51, 48, 45, 52, 49, 46,
        53, 50, 47],
 'z': [42, 39, 36, 43, 40, 37, 44, 41, 38, 15, 12,  9, 16, 13, 10, 17, 14,
       11,  6,  3,  0,  7,  4,  1,  8,  5,  2, 29, 32, 35, 28, 31, 34, 27,
       30, 33, 51, 48, 45, 52, 49, 46, 53, 50, 47, 24, 21, 18, 25, 22, 19,
       26, 23, 20],
 'z2': [53, 52, 51, 50, 49, 48, 47, 46, 45, 17, 16, 15, 14, 13, 12, 11, 10,
        9, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29,
        28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18,  8,  7,  6,  5,  4,  3,
        2,  1,  0],
 "z'": [20, 23, 26, 19, 22, 25, 18, 21, 24, 11, 14, 17, 10, 13, 16,  9, 12,
        15, 47, 50, 53, 46, 49, 52, 45, 48, 51, 33, 30, 27, 34, 31, 28, 35,
        32, 29,  2,  5,  8,  1,  4,  7,  0,  3,  6, 38, 41, 44, 37, 40, 43,
        36, 39, 42],
 'M': [0, 34,  2,  3, 31,  5,  6, 28,  8,  9,  1, 11, 12,  4, 14, 15,  7,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 52, 29, 30, 49, 32, 33,
       46, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 10, 47, 48, 13, 50,
       51, 16, 53],
 'M2': [0, 46,  2,  3, 49,  5,  6, 52,  8,  9, 34, 11, 12, 31, 14, 15, 28,
        17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 16, 29, 30, 13, 32, 33,
        10, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,  1, 47, 48,  4, 50,
        51,  7, 53],
 "M'": [0, 10,  2,  3, 13,  5,  6, 16,  8,  9, 46, 11, 12, 49, 14, 15, 52,
        17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,  7, 29, 30,  4, 32, 33,
        1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 34, 47, 48, 31, 50,
        51, 28, 53],
 'S': [0,  1,  2, 43, 40, 37,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18,  3, 20, 21,  4, 23, 24,  5, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 48, 38, 39, 49, 41, 42, 50, 44, 45, 46, 47, 25, 22, 19,
       51, 52, 53],
 'S2': [0,  1,  2, 50, 49, 48,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
        17, 18, 43, 20, 21, 40, 23, 24, 37, 26, 27, 28, 29, 30, 31, 32, 33,
        34, 35, 36, 25, 38, 39, 22, 41, 42, 19, 44, 45, 46, 47,  5,  4,  3,
        51, 52, 53],
 "S'": [0,  1,  2, 19, 22, 25,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
        17, 18, 50, 20, 21, 49, 23, 24, 48, 26, 27, 28, 29, 30, 31, 32, 33,
        34, 35, 36,  5, 38, 39,  4, 41, 42,  3, 44, 45, 46, 47, 37, 40, 43,
        51, 52, 53],
 'E': [0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 39, 40, 41, 15, 16,
       17, 18, 19, 20, 12, 13, 14, 24, 25, 26, 27, 28, 29, 21, 22, 23, 33,
       34, 35, 36, 37, 38, 30, 31, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53],
 'E2': [0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 30, 31, 32, 15, 16,
        17, 18, 19, 20, 39, 40, 41, 24, 25, 26, 27, 28, 29, 12, 13, 14, 33,
        34, 35, 36, 37, 38, 21, 22, 23, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        51, 52, 53],
 "E'": [0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 21, 22, 23, 15, 16,
        17, 18, 19, 20, 30, 31, 32, 24, 25, 26, 27, 28, 29, 39, 40, 41, 33,
        34, 35, 36, 37, 38, 12, 13, 14, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        51, 52, 53],
 'U': [6,  3,  0,  7,  4,  1,  8,  5,  2, 18, 19, 20, 12, 13, 14, 15, 16,
       17, 27, 28, 29, 21, 22, 23, 24, 25, 26, 36, 37, 38, 30, 31, 32, 33,
       34, 35,  9, 10, 11, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53],
 "U'": [2,  5,  8,  1,  4,  7,  0,  3,  6, 36, 37, 38, 12, 13, 14, 15, 16,
        17,  9, 10, 11, 21, 22, 23, 24, 25, 26, 18, 19, 20, 30, 31, 32, 33,
        34, 35, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        51, 52, 53],
 'U2': [8,  7,  6,  5,  4,  3,  2,  1,  0, 27, 28, 29, 12, 13, 14, 15, 16,
        17, 36, 37, 38, 21, 22, 23, 24, 25, 26,  9, 10, 11, 30, 31, 32, 33,
        34, 35, 18, 19, 20, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        51, 52, 53],
 'Uw': [6,  3,  0,  7,  4,  1,  8,  5,  2, 18, 19, 20, 21, 22, 23, 15, 16,
        17, 27, 28, 29, 30, 31, 32, 24, 25, 26, 36, 37, 38, 39, 40, 41, 33,
        34, 35,  9, 10, 11, 12, 13, 14, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        51, 52, 53],
 "Uw'": [2,  5,  8,  1,  4,  7,  0,  3,  6, 36, 37, 38, 39, 40, 41, 15, 16,
         17,  9, 10, 11, 12, 13, 14, 24, 25, 26, 18, 19, 20, 21, 22, 23, 33,
         34, 35, 27, 28, 29, 30, 31, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50,
         51, 52, 53],
 'Uw2': [8,  7,  6,  5,  4,  3,  2,  1,  0, 27, 28, 29, 30, 31, 32, 15, 16,
         17, 36, 37, 38, 39, 40, 41, 24, 25, 26,  9, 10, 11, 12, 13, 14, 33,
         34, 35, 18, 19, 20, 21, 22, 23, 42, 43, 44, 45, 46, 47, 48, 49, 50,
         51, 52, 53],
 'F': [0,  1,  2,  3,  4,  5, 44, 41, 38, 15, 12,  9, 16, 13, 10, 17, 14,
       11,  6, 19, 20,  7, 22, 23,  8, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 45, 39, 40, 46, 42, 43, 47, 24, 21, 18, 48, 49, 50,
       51, 52, 53],
 "F'": [0,  1,  2,  3,  4,  5, 18, 21, 24, 11, 14, 17, 10, 13, 16,  9, 12,
        15, 47, 19, 20, 46, 22, 23, 45, 25, 26, 27, 28, 29, 30, 31, 32, 33,
        34, 35, 36, 37,  8, 39, 40,  7, 42, 43,  6, 38, 41, 44, 48, 49, 50,
        51, 52, 53],
 'F2': [0,  1,  2,  3,  4,  5, 47, 46, 45, 17, 16, 15, 14, 13, 12, 11, 10,
        9, 44, 19, 20, 41, 22, 23, 38, 25, 26, 27, 28, 29, 30, 31, 32, 33,
        34, 35, 36, 37, 24, 39, 40, 21, 42, 43, 18,  8,  7,  6, 48, 49, 50,
        51, 52, 53],
 'Fw': [0,  1,  2, 43, 40, 37, 44, 41, 38, 15, 12,  9, 16, 13, 10, 17, 14,
        11,  6,  3, 20,  7,  4, 23,  8,  5, 26, 27, 28, 29, 30, 31, 32, 33,
        34, 35, 36, 48, 45, 39, 49, 46, 42, 50, 47, 24, 21, 18, 25, 22, 19,
        51, 52, 53],
 "Fw'": [0,  1,  2, 19, 22, 25, 18, 21, 24, 11, 14, 17, 10, 13, 16,  9, 12,
         15, 47, 50, 20, 46, 49, 23, 45, 48, 26, 27, 28, 29, 30, 31, 32, 33,
         34, 35, 36,  5,  8, 39,  4,  7, 42,  3,  6, 38, 41, 44, 37, 40, 43,
         51, 52, 53],
 'Fw2': [0,  1,  2, 50, 49, 48, 47, 46, 45, 17, 16, 15, 14, 13, 12, 11, 10,
         9, 44, 43, 20, 41, 40, 23, 38, 37, 26, 27, 28, 29, 30, 31, 32, 33,
         34, 35, 36, 25, 24, 39, 22, 21, 42, 19, 18,  8,  7,  6,  5,  4,  3,
         51, 52, 53],
 'R': [0,  1, 11,  3,  4, 14,  6,  7, 17,  9, 10, 47, 12, 13, 50, 15, 16,
       53, 24, 21, 18, 25, 22, 19, 26, 23, 20,  8, 28, 29,  5, 31, 32,  2,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 33, 48, 49, 30,
       51, 52, 27],
 "R'": [0,  1, 33,  3,  4, 30,  6,  7, 27,  9, 10,  2, 12, 13,  5, 15, 16,
        8, 20, 23, 26, 19, 22, 25, 18, 21, 24, 53, 28, 29, 50, 31, 32, 47,
        34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 11, 48, 49, 14,
        51, 52, 17],
 'R2': [0,  1, 47,  3,  4, 50,  6,  7, 53,  9, 10, 33, 12, 13, 30, 15, 16,
        27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 28, 29, 14, 31, 32, 11,
        34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,  2, 48, 49,  5,
        51, 52,  8],
 'Rw': [0, 10, 11,  3, 13, 14,  6, 16, 17,  9, 46, 47, 12, 49, 50, 15, 52,
        53, 24, 21, 18, 25, 22, 19, 26, 23, 20,  8,  7, 29,  5,  4, 32,  2,
        1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 34, 33, 48, 31, 30,
        51, 28, 27],
 "Rw'": [0, 34, 33,  3, 31, 30,  6, 28, 27,  9,  1,  2, 12,  4,  5, 15,  7,
         8, 20, 23, 26, 19, 22, 25, 18, 21, 24, 53, 52, 29, 50, 49, 32, 47,
         46, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 10, 11, 48, 13, 14,
         51, 16, 17],
 'Rw2': [0, 46, 47,  3, 49, 50,  6, 52, 53,  9, 34, 33, 12, 31, 30, 15, 28,
         27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 29, 14, 13, 32, 11,
         10, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,  1,  2, 48,  4,  5,
         51,  7,  8],
 'B': [20, 23, 26,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 53, 21, 22, 52, 24, 25, 51, 33, 30, 27, 34, 31, 28, 35,
       32, 29,  2, 37, 38,  1, 40, 41,  0, 43, 44, 45, 46, 47, 48, 49, 50,
       36, 39, 42],
 "B'": [42, 39, 36,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
        17, 18, 19,  0, 21, 22,  1, 24, 25,  2, 29, 32, 35, 28, 31, 34, 27,
        30, 33, 51, 37, 38, 52, 40, 41, 53, 43, 44, 45, 46, 47, 48, 49, 50,
        26, 23, 20],
 'B2': [53, 52, 51,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
        17, 18, 19, 42, 21, 22, 39, 24, 25, 36, 35, 34, 33, 32, 31, 30, 29,
        28, 27, 26, 37, 38, 23, 40, 41, 20, 43, 44, 45, 46, 47, 48, 49, 50,
        2,  1,  0],
 'Bw': [20, 23, 26, 19, 22, 25,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
        17, 18, 50, 53, 21, 49, 52, 24, 48, 51, 33, 30, 27, 34, 31, 28, 35,
        32, 29,  2,  5, 38,  1,  4, 41,  0,  3, 44, 45, 46, 47, 37, 40, 43,
        36, 39, 42],
 "Bw'": [42, 39, 36, 43, 40, 37,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
         17, 18,  3,  0, 21,  4,  1, 24,  5,  2, 29, 32, 35, 28, 31, 34, 27,
         30, 33, 51, 48, 38, 52, 49, 41, 53, 50, 44, 45, 46, 47, 25, 22, 19,
         26, 23, 20],
 'Bw2': [53, 52, 51, 50, 49, 48,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
         17, 18, 43, 42, 21, 40, 39, 24, 37, 36, 35, 34, 33, 32, 31, 30, 29,
         28, 27, 26, 25, 38, 23, 22, 41, 20, 19, 44, 45, 46, 47,  5,  4,  3,
         2,  1,  0],
 'L': [35,  1,  2, 32,  4,  5, 29,  7,  8,  0, 10, 11,  3, 13, 14,  6, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 51, 30, 31, 48, 33,
       34, 45, 42, 39, 36, 43, 40, 37, 44, 41, 38,  9, 46, 47, 12, 49, 50,
       15, 52, 53],
 "L'": [9,  1,  2, 12,  4,  5, 15,  7,  8, 45, 10, 11, 48, 13, 14, 51, 16,
        17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,  6, 30, 31,  3, 33,
        34,  0, 38, 41, 44, 37, 40, 43, 36, 39, 42, 35, 46, 47, 32, 49, 50,
        29, 52, 53],
 'L2': [45,  1,  2, 48,  4,  5, 51,  7,  8, 35, 10, 11, 32, 13, 14, 29, 16,
        17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 15, 30, 31, 12, 33,
        34,  9, 44, 43, 42, 41, 40, 39, 38, 37, 36,  0, 46, 47,  3, 49, 50,
        6, 52, 53],
 'Lw': [35, 34,  2, 32, 31,  5, 29, 28,  8,  0,  1, 11,  3,  4, 14,  6,  7,
        17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 52, 51, 30, 49, 48, 33,
        46, 45, 42, 39, 36, 43, 40, 37, 44, 41, 38,  9, 10, 47, 12, 13, 50,
        15, 16, 53],
 "Lw'": [9, 10,  2, 12, 13,  5, 15, 16,  8, 45, 46, 11, 48, 49, 14, 51, 52,
         17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,  7,  6, 30,  4,  3, 33,
         1,  0, 38, 41, 44, 37, 40, 43, 36, 39, 42, 35, 34, 47, 32, 31, 50,
         29, 28, 53],
 'Lw2': [45, 46,  2, 48, 49,  5, 51, 52,  8, 35, 34, 11, 32, 31, 14, 29, 28,
         17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 16, 15, 30, 13, 12, 33,
         10,  9, 44, 43, 42, 41, 40, 39, 38, 37, 36,  0,  1, 47,  3,  4, 50,
         6,  7, 53],
 'D': [0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 42, 43,
       44, 18, 19, 20, 21, 22, 23, 15, 16, 17, 27, 28, 29, 30, 31, 32, 24,
       25, 26, 36, 37, 38, 39, 40, 41, 33, 34, 35, 51, 48, 45, 52, 49, 46,
       53, 50, 47],
 "D'": [0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 24, 25,
        26, 18, 19, 20, 21, 22, 23, 33, 34, 35, 27, 28, 29, 30, 31, 32, 42,
        43, 44, 36, 37, 38, 39, 40, 41, 15, 16, 17, 47, 50, 53, 46, 49, 52,
        45, 48, 51],
 'D2': [0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 33, 34,
        35, 18, 19, 20, 21, 22, 23, 42, 43, 44, 27, 28, 29, 30, 31, 32, 15,
        16, 17, 36, 37, 38, 39, 40, 41, 24, 25, 26, 53, 52, 51, 50, 49, 48,
        47, 46, 45],
 'Dw': [0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 39, 40, 41, 42, 43,
        44, 18, 19, 20, 12, 13, 14, 15, 16, 17, 27, 28, 29, 21, 22, 23, 24,
        25, 26, 36, 37, 38, 30, 31, 32, 33, 34, 35, 51, 48, 45, 52, 49, 46,
        53, 50, 47],
 "Dw'": [0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 21, 22, 23, 24, 25,
         26, 18, 19, 20, 30, 31, 32, 33, 34, 35, 27, 28, 29, 39, 40, 41, 42,
         43, 44, 36, 37, 38, 12, 13, 14, 15, 16, 17, 47, 50, 53, 46, 49, 52,
         45, 48, 51],
 'Dw2': [0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 30, 31, 32, 33, 34,
         35, 18, 19, 20, 39, 40, 41, 42, 43, 44, 27, 28, 29, 12, 13, 14, 15,
         16, 17, 36, 37, 38, 21, 22, 23, 24, 25, 26, 53, 52, 51, 50, 49, 48,
         47, 46, 45]
}


def get_cube_state(state):
    if state == 'solved':
        cube_state = ['U']*9 + ['F']*9 + ['R']*9 + ['B']*9 + ['L']*9 + ['D']*9
    elif state == 'F2L':
        cube_state = ['G']*12 + ['B']*6 + ['G']*3 + ['R']*6 + ['G']*3 + \
            ['F']*6 + ['G']*3 + ['L']*6 + ['U']*9
    elif state == 'OLL':
        cube_state = ['D']*9 + ['G']*3 + ['B']*6 + ['G']*3 + ['R']*6 + \
            ['G']*3 + ['F']*6 + ['G']*3 + ['L']*6 + ['U']*9
    elif state == 'DR':
        cube_state = ['D']*9 + ['G']*36 + ['D']*9
    return cube_state


def apply_turns(sequence, cube_state=None, state="solved"):
    cube_state = cube_state if cube_state is not None \
      else get_cube_state(state)
    for move in sequence.split():
        cube_state = [cube_state[i] for i in _PERMUTATIONS[move]]
    return cube_state


def plot_piece(ax, x, y, piece):
    """ Draw a piece of the cube. """
    ax.add_patch(
      Rectangle(
        (x, y),
        1,
        1,
        edgecolor='black',
        facecolor=_COLORS[piece])
    )


def plot_face(ax, piece_list, x_rel, y_rel, padding):
    """ Draw a face of the cube. """
    for i, piece in enumerate(piece_list):
        x = x_rel + i % 3 * (1 + padding)
        y = y_rel + (2 - i // 3) * (1 + padding)

        plot_piece(ax, x, y, piece)


def plot_cube_state(cube_state, state="solved"):
    """ Draw a cube state. """
    x_pad = 3.0
    y_pad = 0.1
    padding = 0
    padding_face = 0.25
    side_length = 3 + 2*padding + padding_face

    fig, ax = plt.subplots()
    ax.set_xlim(-x_pad, x_pad + 12 + 8*padding + 3*padding_face)
    ax.set_ylim(-y_pad, y_pad + 9 + 6*padding + 2*padding_face)
    ax.set_aspect('equal')
    ax.axis('off')

    plot_face(ax, cube_state[:9], side_length, 2*side_length, padding)
    plot_face(ax, cube_state[9:18], side_length, side_length, padding)
    plot_face(ax, cube_state[18:27], 2*side_length, side_length, padding)
    plot_face(ax, cube_state[27:36], 3*side_length, side_length, padding)
    plot_face(ax, cube_state[36:45], 0, side_length, padding)
    plot_face(ax, cube_state[45:], side_length, 0, padding)

    return fig
