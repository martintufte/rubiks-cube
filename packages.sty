% Author - Jon Arnt KÃ¥rstad, NTNU IV-IMT

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{packages}[2021/04/20 Packages]
\usepackage[utf8]{inputenc} % Character encoding

% ------ Contents -------
% Appendices
% Bibliography & References
% Code input
% Colors
% Flow charts
% Front matter
% General
% Image
% Language
% Main matter
% Mathematics
% Page setup
% -----------------------

% --- Appendices ---
\usepackage{appendix}
\newcommand{\addappendix}{   % Self-created command to insert appendix with predefined settings
    \newpage
    \appendix
    \section*{Appendix}   % Name of appendix
    \addcontentsline{toc}{section}{Appendix}  % Add appendix name to table of contents
    \renewcommand{\thesubsection}{\Alph{subsection}}    % Change numbering of section to upper-case letters.
}

% --- Bibliography & References---  
\usepackage[backend = biber,    % Recommended backend for sorting bibliography
            style = authoryear-comp,    % Close to the 'Harvard' referencing style
            urldate = long,     % Long: 24th Mar. 1997 | Short: 24/03/1997
            maxcitenames = 2,   % Number of authors in cite before replaced with 'Author#1 et al.'
            ]{biblatex}
\addbibresource{references.bib}     % Adding our file containing the references
% \addbibresource{reference_2.bib} is possible if we want to add several reference files

\usepackage{caption}        % Enables controlling the look and feel of captions, see package documentation
\usepackage{subcaption}     % Recommended when making sub-figures
\usepackage[nottoc]{tocbibind}  % Includes Bibliography, Index, list of Listing etc. to table of contents
\newcommand{\source}[1]{\vspace{-4pt} \caption*{\hfill \footnotesize{Source: {#1}} } }   % Easily insert sources in images

% --- Code ---
\usepackage{minted} % Includes several programming languages and styles, visit --https://www.ntnu.no/wiki/display/imtsoftware/Code+in+LaTeX-- for more information and examples

% --- Colors ---
\usepackage[dvipsnames]{xcolor} % Using colors in LaTeX. This package is placed here as it needs to be imported previous to the flow chart packages to ensure no errors.

% --- Flow Charts ---
% Keep in mind that you may customize these flow chart settings to fit your own preferences.
\usepackage{tikz}
\usetikzlibrary{shapes,arrows}
\tikzstyle{decision} = [diamond, draw, fill=blue!20, 
    text width=4.5em, text badly centered, node distance=3cm, inner sep=0pt]
\tikzstyle{block} = [rectangle, draw, fill=blue!20, 
    text width=5em, text centered, rounded corners, minimum height=4em]
\tikzstyle{line} = [draw, -latex']
\tikzstyle{cloud} = [draw, ellipse,fill=red!20, node distance=3cm,
    minimum height=2em]

% --- Front matter ---
% Front matter is located before the table of contents, e.g. preface (Norsk: forord) and often has separate settings
\newcommand{\frontmatter}{
    \pagenumbering{roman}   % Setting page numbering to lower-case roman
}

% --- General ---
\usepackage{import}     % Enable importing of sections
\usepackage{csquotes}   % Provides international handling of quote marks. Especially useful for bibliography management using BibLaTeX
\usepackage{hyperref}   % Hyper-references, possible to change color
\hypersetup{    % Color of hyper-references
    colorlinks,
    citecolor = black,
    filecolor = black,
    linkcolor = black,
    urlcolor = black
}
\usepackage{comment}    % Comment blocks of text using \begin{comment} ... \end{comment}
\usepackage{pdfpages}   % Enables import of pdf-pages using e.g. \includepdf[pages=-]{./my_pdf.pdf}

% --- Image ---
\usepackage{graphicx}   % Handle images
\usepackage{wrapfig}    % Wrap text around images
\usepackage{float}      % Force image location using "H"
\usepackage{url}        % Insert urls
\urlstyle{sf}           % Set url-style as "sans-serif". Other options are e.g. "same" or "rm"
\newcommand{\HRule}{\rule{\linewidth}{0.5mm}}   % Ruler

% --- Language ---
\usepackage{siunitx}    % Enable SI units
\usepackage[british]{babel}     % Defining UK English as language. This will among other things ensure that dates are displayed as 24/03/1997 rather than 03/24/1997 in the bibliography.
\addto\extrasbritish{   % Change naming of different functions, e.g. figure references.
    \renewcommand*\contentsname{Table of Contents}  % Rename table of contents
    \renewcommand{\listfigurename}{List of Figures} % Rename list of figures
    \renewcommand{\listtablename}{List of Tables}   % Rename list of tables
    \def\equationautorefname{Equation}              % Autoref-name for equations
    \def\figureautorefname{Figure}                  % Autoref-name for figures
    \def\tableautorefname{Table}                    % Autoref-name for tables
    \def\sectionautorefname{Section}                % Autoref-name for sections
    \def\subsectionautorefname{\sectionautorefname} % Autoref-name for subsections
    \def\subsubsectionautorefname{\sectionautorefname} % Autoref-name for subsubsections
}

% --- Main matter ---
% This is the main part of the paper.
\newcommand{\mainmatter}{
    \newpage
    \pagenumbering{arabic}  % Setting page numbering to normal integers
}

% --- Mathematics ---
\usepackage{bm}         % Bold text in math mode
\usepackage{amsmath}    % Math formulas and improved typographical quality of their output
\usepackage{amssymb}    % Extended symbol collection
\usepackage{amsthm}     % Helps define theorem-like structures
\usepackage{textcomp}   % Used in the package "gensymb" (below), which will give warnings if "textcomp" is not imported in advance
\usepackage{gensymb}    % Adds extra generic symbols for math and text mode, e.g. \degree


% --- Page setup ---
\usepackage[a4paper, total={150mm, 245mm,footskip = 14mm}]{geometry}
\setlength{\parindent}{0em}
\setlength{\parskip}{0.8em}

% Customized header and footer
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}
\renewcommand{\headrulewidth}{0.1ex}
\renewcommand{\footrulewidth}{0.1ex}
\fancyfoot[C]{\thepage}

%%% Cube packages
\usepackage{tikz}
\usepackage{tikz-3dplot}
\usepackage{listings}

% custom if-statement
\newif\ifhighquality
\newcommand{\LowQuality}{\highqualityfalse}
\newcommand{\HighQuality}{\highqualitytrue}

\usepackage{pgfplots}

%%% Custom cube commands

% For drawing sequences of moves
\newcommand{\p}{\textquotesingle}
\newcommand{\Comment}[1]{{\color{gray}\quad// #1}}

% Color Scheme
\newcommand{\StandardColorScheme}{    
    \definecolor{U}{RGB}{255, 255, 255} % white
    \definecolor{F}{RGB}{  0, 216,   0} % green
    \definecolor{R}{RGB}{224,   0,   0} % red
    \definecolor{B}{RGB}{ 20,  80, 240} % blue
    \definecolor{L}{RGB}{255, 144,   0} % orange
    \definecolor{D}{RGB}{255, 255,   0} % yellow
    \definecolor{G}{RGB}{ 96,  96,  96} % gray
}
\newcommand{\JapaneseColorScheme}{    
    \definecolor{U}{RGB}{255, 255, 255} % white
    \definecolor{F}{RGB}{  0, 216,   0} % green
    \definecolor{R}{RGB}{224,   0,   0} % red
    \definecolor{B}{RGB}{255, 255,   0} % yellow
    \definecolor{L}{RGB}{255, 144,   0} % orange
    \definecolor{D}{RGB}{ 20,  80, 240} % blue
    \definecolor{G}{RGB}{ 96,  96,  96} % gray
}

% Settings
\HighQuality            % \LowQuality, \HighQuality
\StandardColorScheme    % \StandardColorScheme, \JapaneseColorScheme


%%% DRAW FUNCTIONS %%%

\newcommand{\DrawCube}[2]{
 % #1: size of cube, #2: side length of regular 3x3
 % Side length of nxn-cube is given as 1 + 1/25*(n-3)
\begin{tikzpicture}[
    scale = 1+1/25*(#1-3),
    % used to draw 3D-looking smooth corners
    declare function={
        f(\x,\dx,\u,\v) = \x + ((1-sqrt(1-\u))*sqrt(\v) + sqrt(1-\u))*\dx;   % parameterized x-coordinate
        g(\y,\dy,\u,\v) = \y + ((1-sqrt(1-\u))*sqrt(1-\v) + sqrt(1-\u))*\dy; % parameterized y-coordinate
        h(\z,\dz,\u,\v) = \z + (sqrt(\u))*\dz;                               % parameterized z-coordinate
        UIndex(\i,\j) = (\j)+\Csize*(\Csize-1-\i);                           % index of up face
        FIndex(\i,\j) = (\i)+\Csize*(\Csize-1-\j)+\Csize^2;                  % index of front face
        RIndex(\i,\j) = (\i)+\Csize*(\Csize-1-\j)+2*\Csize^2;                % index of right face
    }
 ]
 % size of cube, sidelength, radius of pieces
 \pgfmathsetmacro{\Csize}{#1}
 \pgfmathsetmacro{\Clength}{#2}
 \pgfmathsetmacro{\Cpiecelength}{\Clength/\Csize}
 \pgfmathsetmacro{\Cradius}{\Cpiecelength * 0.2}
 \pgfmathsetmacro{\limit}{\Csize-1}
 
 % Short notations
 \pgfmathsetmacro{\s}{\Csize}
 \pgfmathsetmacro{\l}{\Clength}
 \pgfmathsetmacro{\r}{\Cradius}

 % Perspective of pdf-box
 \pgfmathsetmacro{\AngleOne}{60} % rotation from z-axis to front view [0, 90]
 \pgfmathsetmacro{\AngleTwo}{45} % rotation around z-axis [0, 90]. 0: Front, 90: Right
 \tdplotsetmaincoords{\AngleOne}{\AngleTwo}

 % Vindow size
 %\pgfmathsetmacro{\VindowLength}{1.4142} %* sin(3.1415/180 * (45 + \AngleTwo))}
 %\pgfmathsetmacro{\VindowHeight}{1.4142 * sin(3.1415/180 * (45 + \AngleTwo))}
 \pgfmathsetmacro{\Padding}{0.025}
 \clip (-\Padding, -0.7*\Clength) rectangle (1.4142*\Clength + \Padding, 1.35*\Clength);
 
 \begin{scope}[tdplot_main_coords]
    % Draw smoothed corners
    \foreach \u in {0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0}{
        \draw[thick,black] plot[variable=\v,samples=9,smooth,domain=0:1] ({f(\r,-\r,\u,\v)},{g(\r,-\r,\u,\v)},{h(\r,-\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=9,smooth,domain=0:1] ({f(\l-\r,\r,\u,\v)},{g(\r,-\r,\u,\v)},{h(\r,-\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=9,smooth,domain=0:1] ({f(\r,-\r,\u,\v)},{g(\l-\r,\r,\u,\v)},{h(\r,-\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=9,smooth,domain=0:1] ({f(\r,-\r,\u,\v)},{g(\r,-\r,\u,\v)},{h(\l-\r,\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=9,smooth,domain=0:1] ({f(\l-\r,\r,\u,\v)},{g(\l-\r,\r,\u,\v)},{h(\r,-\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=9,smooth,domain=0:1] ({f(\l-\r,\r,\u,\v)},{g(\r,-\r,\u,\v)},{h(\l-\r,\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=9,smooth,domain=0:1] ({f(\r,-\r,\u,\v)},{g(\l-\r,\r,\u,\v)},{h(\l-\r,\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=9,smooth,domain=0:1] ({f(\l-\r,\r,\u,\v)},{g(\l-\r,\r,\u,\v)},{h(\l-\r,\r,\u,\v)});
    }
 
    % Draw background for visible faces
    \filldraw [canvas is xz plane at y=0] (0, \Cradius) rectangle (\l, \l-\Cradius); % Front
    \filldraw [canvas is xz plane at y=0] (\Cradius, 0) rectangle (\l-\Cradius, \l); % Front
    \filldraw [canvas is yz plane at x=\l] (0, \Cradius) rectangle (\l, \l-\Cradius); % Up
    \filldraw [canvas is yz plane at x=\l] (\Cradius, 0) rectangle (\l-\Cradius, \l); % Up
    \filldraw [canvas is xy plane at z=\l] (0, \Cradius) rectangle (\l, \l-\Cradius); % Right
    \filldraw [canvas is xy plane at z=\l] (\Cradius, 0) rectangle (\l-\Cradius, \l); % Right

    % Draw visible faces
    \foreach \i in {0, 1, ..., \limit}{
        \foreach \j in {0, 1, ..., \limit}{
        % Up
        \pgfmathsetmacro{\upcolor}{\myarray[UIndex(\i,\j)]}
        \draw [thick, canvas is yx plane at z=\l, shift={(\i*\Cpiecelength, \j*\Cpiecelength)}, fill=\upcolor] (\Cradius, 0) -- ({\Cpiecelength-\Cradius},0) arc (-90:0:\Cradius) -- (\Cpiecelength, {\Cpiecelength-\Cradius}) arc (0:90:\Cradius) -- (\Cradius, \Cpiecelength) arc (90:180:\Cradius) -- (0, \Cradius) arc (180:270:\Cradius) -- cycle;
        % Front
        \pgfmathsetmacro{\frontcolor}{\myarray[FIndex(\i,\j)]}
        \draw [thick, canvas is xz plane at y=0, shift={(\i*\Cpiecelength, \j*\Cpiecelength)}, fill=\frontcolor] (\Cradius, 0) -- ({\Cpiecelength-\Cradius},0) arc (-90:0:\Cradius) -- (\Cpiecelength, {\Cpiecelength-\Cradius}) arc (0:90:\Cradius) -- (\Cradius, \Cpiecelength) arc (90:180:\Cradius) -- (0, \Cradius) arc (180:270:\Cradius) -- cycle;
        % Right
        \pgfmathsetmacro{\rightcolor}{\myarray[RIndex(\i,\j)]}
        \draw [thick, canvas is yz plane at x=\l, shift={(\i*\Cpiecelength, \j*\Cpiecelength)}, fill=\rightcolor] (\Cradius, 0) -- ({\Cpiecelength-\Cradius},0) arc (-90:0:\Cradius) -- (\Cpiecelength, {\Cpiecelength-\Cradius}) arc (0:90:\Cradius) -- (\Cradius, \Cpiecelength) arc (90:180:\Cradius) -- (0, \Cradius) arc (180:270:\Cradius) -- cycle;
        }
    }
 \end{scope}
\end{tikzpicture}}


% Similar to \DrawCube, but less detailed
\newcommand{\DrawCubeIcon}[2]{
 % #1: size of cube, #2: side length of regular 3x3
 % Side length of nxn-cube is given as 1 + 1/25*(n-3)
\begin{tikzpicture}[
    scale = 1+1/25*(#1-3),
    % used to draw 3D-looking smooth corners
    declare function={
        f(\x,\dx,\u,\v) = \x + ((1-sqrt(1-\u))*sqrt(\v) + sqrt(1-\u))*\dx;   % parameterized x-coordinate
        g(\y,\dy,\u,\v) = \y + ((1-sqrt(1-\u))*sqrt(1-\v) + sqrt(1-\u))*\dy; % parameterized y-coordinate
        h(\z,\dz,\u,\v) = \z + (sqrt(\u))*\dz;                               % parameterized z-coordinate
        UIndex(\i,\j) = (\j)+\Csize*(\Csize-1-\i);                           % index of up face
        FIndex(\i,\j) = (\i)+\Csize*(\Csize-1-\j)+\Csize^2;                  % index of front face
        RIndex(\i,\j) = (\i)+\Csize*(\Csize-1-\j)+2*\Csize^2;                % index of right face
    }
 ]
 % size of cube, sidelength, radius of pieces
 \pgfmathsetmacro{\Csize}{#1}
 \pgfmathsetmacro{\Clength}{#2}
 \pgfmathsetmacro{\Cpiecelength}{\Clength/\Csize}
 \pgfmathsetmacro{\Cradius}{\Cpiecelength * 0.2}
 \pgfmathsetmacro{\limit}{\Csize-1}
 
 % Short notations
 \pgfmathsetmacro{\s}{\Csize}
 \pgfmathsetmacro{\l}{\Clength}
 \pgfmathsetmacro{\r}{\Cradius}

 % Size of pdf-box and perspective
 \pgfmathsetmacro{\AngleOne}{60} % rotation from z-axis to front view [0, 90]
 \pgfmathsetmacro{\AngleTwo}{45} % rotation around z-axis [0, 90]. 0: Front, 90: Right
 \tdplotsetmaincoords{\AngleOne}{\AngleTwo}

 % Vindow size
 %\pgfmathsetmacro{\VindowLength}{1.4142} %* sin(3.1415/180 * (45 + \AngleTwo))}
 %\pgfmathsetmacro{\VindowHeight}{1.4142 * sin(3.1415/180 * (45 + \AngleTwo))}
 %\pgfmathsetmacro{\Padding}{0.025}
 %\clip (-\Padding, -0.7*\Clength) rectangle (\VindowLength*\Clength + \Padding, 1.35*\Clength);
 
 \begin{scope}[tdplot_main_coords]
    % Draw smoothed corners
    \foreach \u in {0.0, 0.25, 0.5, 0.75, 1.0}{
        \draw[thick,black] plot[variable=\v,samples=5,smooth,domain=0:1] ({f(\r,-\r,\u,\v)},{g(\r,-\r,\u,\v)},{h(\r,-\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=5,smooth,domain=0:1] ({f(\l-\r,\r,\u,\v)},{g(\r,-\r,\u,\v)},{h(\r,-\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=5,smooth,domain=0:1] ({f(\r,-\r,\u,\v)},{g(\l-\r,\r,\u,\v)},{h(\r,-\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=5,smooth,domain=0:1] ({f(\r,-\r,\u,\v)},{g(\r,-\r,\u,\v)},{h(\l-\r,\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=5,smooth,domain=0:1] ({f(\l-\r,\r,\u,\v)},{g(\l-\r,\r,\u,\v)},{h(\r,-\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=5,smooth,domain=0:1] ({f(\l-\r,\r,\u,\v)},{g(\r,-\r,\u,\v)},{h(\l-\r,\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=5,smooth,domain=0:1] ({f(\r,-\r,\u,\v)},{g(\l-\r,\r,\u,\v)},{h(\l-\r,\r,\u,\v)});
        \draw[thick,black] plot[variable=\v,samples=5,smooth,domain=0:1] ({f(\l-\r,\r,\u,\v)},{g(\l-\r,\r,\u,\v)},{h(\l-\r,\r,\u,\v)});
    }
 
    % Draw background for visible faces
    \filldraw [canvas is xz plane at y=0] (0, \Cradius) rectangle (\l, \l-\Cradius); % Front
    \filldraw [canvas is xz plane at y=0] (\Cradius, 0) rectangle (\l-\Cradius, \l); % Front
    \filldraw [canvas is yz plane at x=\l] (0, \Cradius) rectangle (\l, \l-\Cradius); % Up
    \filldraw [canvas is yz plane at x=\l] (\Cradius, 0) rectangle (\l-\Cradius, \l); % Up
    \filldraw [canvas is xy plane at z=\l] (0, \Cradius) rectangle (\l, \l-\Cradius); % Right
    \filldraw [canvas is xy plane at z=\l] (\Cradius, 0) rectangle (\l-\Cradius, \l); % Right

    % Draw visible faces
    \foreach \i in {0, 1, ..., \limit}{
        \foreach \j in {0, 1, ..., \limit}{
        % Up
        \pgfmathsetmacro{\upcolor}{\myarray[UIndex(\i,\j)]}
        \draw [thick, canvas is yx plane at z=\l, shift={(\i*\Cpiecelength, \j*\Cpiecelength)}, fill=\upcolor] (\Cradius, 0) -- ({\Cpiecelength-\Cradius},0) arc (-90:0:\Cradius) -- (\Cpiecelength, {\Cpiecelength-\Cradius}) arc (0:90:\Cradius) -- (\Cradius, \Cpiecelength) arc (90:180:\Cradius) -- (0, \Cradius) arc (180:270:\Cradius) -- cycle;
        % Front
        \pgfmathsetmacro{\frontcolor}{\myarray[FIndex(\i,\j)]}
        \draw [thick, canvas is xz plane at y=0, shift={(\i*\Cpiecelength, \j*\Cpiecelength)}, fill=\frontcolor] (\Cradius, 0) -- ({\Cpiecelength-\Cradius},0) arc (-90:0:\Cradius) -- (\Cpiecelength, {\Cpiecelength-\Cradius}) arc (0:90:\Cradius) -- (\Cradius, \Cpiecelength) arc (90:180:\Cradius) -- (0, \Cradius) arc (180:270:\Cradius) -- cycle;
        % Right
        \pgfmathsetmacro{\rightcolor}{\myarray[RIndex(\i,\j)]}
        \draw [thick, canvas is yz plane at x=\l, shift={(\i*\Cpiecelength, \j*\Cpiecelength)}, fill=\rightcolor] (\Cradius, 0) -- ({\Cpiecelength-\Cradius},0) arc (-90:0:\Cradius) -- (\Cpiecelength, {\Cpiecelength-\Cradius}) arc (0:90:\Cradius) -- (\Cradius, \Cpiecelength) arc (90:180:\Cradius) -- (0, \Cradius) arc (180:270:\Cradius) -- cycle;
        }
    }
 \end{scope}
\end{tikzpicture}}


% Draw Low Quality cube
\newcommand{\DrawSimpleCube}[2]{
 % #1: size of cube, #2: side length of regular 3x3
\begin{tikzpicture}[
    declare function={
        UIndex(\i,\j) = (\j)+\Csize*(\Csize-1-\i);                           % index of up face
        FIndex(\i,\j) = (\i)+\Csize*(\Csize-1-\j)+\Csize^2;                  % index of front face
        RIndex(\i,\j) = (\i)+\Csize*(\Csize-1-\j)+2*\Csize^2;                % index of right face
    }
 ]
 % Size of cube, sidelength
 \pgfmathsetmacro{\Csize}{#1}
 \pgfmathsetmacro{\Clength}{#2}
 \pgfmathsetmacro{\Cpiecelength}{\Clength/\Csize}
 \pgfmathsetmacro{\limit}{\Csize-1}

 % Size of pdf-box and perspective
 \pgfmathsetmacro{\AngleOne}{60} % rotation from z-axis to front view [0, 90]
 \pgfmathsetmacro{\AngleTwo}{45} % rotation around z-axis [0, 90]. 0: Front, 90: Right
 \tdplotsetmaincoords{\AngleOne}{\AngleTwo}
 
 %\clip (-0.05*\Clength, -0.05*\Clength) rectangle (1.5*\Clength, 1.55*\Clength);
 
 \begin{scope}[tdplot_main_coords]
    % Draw visible faces
    \foreach \i in {0, 1, ..., \limit}{
        \foreach \j in {0, 1, ..., \limit}{
        % Up
        \pgfmathsetmacro{\upcolor}{\myarray[UIndex(\i,\j)]}
        \draw [thick, canvas is yx plane at z=\Clength, shift={(\i*\Cpiecelength, \j*\Cpiecelength)}, fill=\upcolor] (0, 0) -- (\Cpiecelength,0) -- (\Cpiecelength, \Cpiecelength) -- (0, \Cpiecelength) -- (0, 0) -- cycle;
        % Front
        \pgfmathsetmacro{\frontcolor}{\myarray[FIndex(\i,\j)]}
        \draw [thick, canvas is xz plane at y=0, shift={(\i*\Cpiecelength, \j*\Cpiecelength)}, fill=\frontcolor] (0, 0) -- (\Cpiecelength,0) -- (\Cpiecelength, \Cpiecelength) -- (0, \Cpiecelength) -- (0, 0) -- cycle;
        % Right
        \pgfmathsetmacro{\rightcolor}{\myarray[RIndex(\i,\j)]}
        \draw [thick, canvas is yz plane at x=\Clength, shift={(\i*\Cpiecelength, \j*\Cpiecelength)}, fill=\rightcolor] (0, 0) -- (\Cpiecelength,0) -- (\Cpiecelength, \Cpiecelength) -- (0, \Cpiecelength) -- (0, 0) -- cycle;
        }
    }
 \end{scope}
\end{tikzpicture}}




\newcommand{\DrawUpFace}[2]{
 % #1: size of cube, #2: side length of cube
    \begin{tikzpicture}[
    declare function={
        UIndex(\i,\j) = \j+\Csize*(\Csize-1-\i);           % index of up face
        FIndex(\i) = \i+\Csize^2;                          % index of front face
        RIndex(\i) = \i+2*\Csize^2;                        % index of right face
        BIndex(\i) = (2-\i)+3*\Csize^2;                    % index of back face
        LIndex(\i) = (2-\i)+4*\Csize^2;                    % index of left face
    }
    ]
    % Size of cube, sidelength
    \pgfmathsetmacro{\Csize}{#1}
    \pgfmathsetmacro{\Clength}{#2}
    \pgfmathsetmacro{\Cpiecelength}{\Clength/\Csize}
    \pgfmathsetmacro{\limit}{\Csize-1}
    
    % Define the shape of the side pieces
    \pgfmathsetmacro{\a}{0.5}                                % How far out the side pieces go
    \pgfmathsetmacro{\b}{0.9}                              % The perspective of the side pieces
    \pgfmathsetmacro{\c}{\Clength * 0.5 * (1-\b)}

    % Draw side pieces
    \foreach \i in {0, 1, ..., \limit}{
        % Right
        \pgfmathsetmacro{\rightcolor}{\myarray[RIndex(\i)]}
        \draw [thick, shift={(\Clength, 0)}, fill=\rightcolor] (0, \i*\Cpiecelength) -- (\Cpiecelength*\a,\b*\i*\Cpiecelength+\c) -- (\Cpiecelength*\a, \b*\i*\Cpiecelength+\b*\Cpiecelength+\c) -- (0, \i*\Cpiecelength+\Cpiecelength) -- (0,\i*\Cpiecelength) -- cycle;
        % Front
        \pgfmathsetmacro{\frontcolor}{\myarray[FIndex(\i)]}
        \draw [thick, shift={(0, 0)}, fill=\frontcolor] (\i*\Cpiecelength,0) -- (\b*\i*\Cpiecelength+\c, -\Cpiecelength*\a) -- (\b*\i*\Cpiecelength+\b*\Cpiecelength+\c, -\Cpiecelength*\a) -- (\i*\Cpiecelength+\Cpiecelength, 0) -- (\i*\Cpiecelength, 0) -- cycle;
        % Left
        \pgfmathsetmacro{\leftcolor}{\myarray[LIndex(\i)]}
        \draw [thick, shift={(0, 0)}, fill=\leftcolor] (0, \i*\Cpiecelength) -- (-\Cpiecelength*\a,\b*\i*\Cpiecelength+\c) -- (-\Cpiecelength*\a, \b*\i*\Cpiecelength+\b*\Cpiecelength+\c) -- (0, \i*\Cpiecelength+\Cpiecelength) -- (0,\i*\Cpiecelength) -- cycle;
        % Back
        \pgfmathsetmacro{\backcolor}{\myarray[BIndex(\i)]}
        \draw [thick, shift={(0, \Clength)}, fill=\backcolor] (\i*\Cpiecelength,0) -- (\b*\i*\Cpiecelength+\c, \Cpiecelength*\a) -- (\b*\i*\Cpiecelength+\b*\Cpiecelength+\c, \Cpiecelength*\a) -- (\i*\Cpiecelength+\Cpiecelength, 0) -- (\i*\Cpiecelength, 0) -- cycle;
    }
    % Draw up face
    \foreach \i in {0, 1, ..., \limit}{
        \foreach \j in {0, 1, ..., \limit}{
        \pgfmathsetmacro{\upcolor}{\myarray[UIndex(\i,\j)]}
        \draw [thick, shift={(\j*\Cpiecelength, \i*\Cpiecelength)}, fill=\upcolor] (0, 0) -- (\Cpiecelength,0) -- (\Cpiecelength, \Cpiecelength) -- (0, \Cpiecelength) -- (0, 0) -- cycle;
        }
    }
    \end{tikzpicture}
}

% Command for drawing the reconstruction
\newcommand{\Reconstruct}[1]{
  \ifhighquality {
    \input{|python code/print_box.py #1 1 0}
  } \else {
    \input{|python code/print_box.py #1 0 0}
  }
  \fi
}

\newcommand{\ReconstructFMC}[1]{
  \ifhighquality {
    \input{|python code/print_box.py #1 1 1}
  } \else {
    \input{|python code/print_box.py #1 0 1}
  }
  \fi
}


% Replace substring command
\usepackage{listofitems}
\newcommand\replace[3]{%
  \setsepchar{#2}%
  \readlist\parsedinput{#1}%
  \foreachitem\x\in\parsedinput{%
    \ifnum\xcnt=1\else#3\fi\x%
  }%
}

\newcommand{\seq}[1]{\texttt{\replace{#1}{'}{\p}}}

% Rubiks cube stored as '\myarray'
\newcommand{\FrontSide}[9]{\def\myarrayF{#1,#2,#3,#4,#5,#6,#7,#8,#9}}
\newcommand{\RightSide}[9]{\def\myarrayR{#1,#2,#3,#4,#5,#6,#7,#8,#9}}
\newcommand{\UpSide}[9]{\def\myarrayU{#1,#2,#3,#4,#5,#6,#7,#8,#9}}
\newcommand{\BackSide}[9]{\def\myarrayB{#1,#2,#3,#4,#5,#6,#7,#8,#9}}
\newcommand{\LeftSide}[9]{\def\myarrayL{#1,#2,#3,#4,#5,#6,#7,#8,#9}}
\newcommand{\DownSide}[9]{\def\myarrayD{#1,#2,#3,#4,#5,#6,#7,#8,#9}}

\newcommand{\BuildCube}{
    \foreach \X [count=\Y] in \myarrayU{
        \ifnum \Y=1
            \xdef\myarray{"\X"}
        \else
            \xdef\myarray{\myarray, "\X"}
        \fi
    }
    \foreach \X in \myarrayF{\xdef\myarray{\myarray, "\X"}}
    \foreach \X in \myarrayR{\xdef\myarray{\myarray, "\X"}}
    \foreach \X in \myarrayB{\xdef\myarray{\myarray, "\X"}}
    \foreach \X in \myarrayL{\xdef\myarray{\myarray, "\X"}}
    \foreach \X in \myarrayD{\xdef\myarray{\myarray, "\X"}}
    \xdef\myarray{{\myarray}}
}

% Define each side of the solved cube
\newcommand{\SolvedCube}{
    \UpSide
        {U}{U}{U}
        {U}{U}{U}
        {U}{U}{U}
    \FrontSide
        {F}{F}{F}
        {F}{F}{F}
        {F}{F}{F}
    \RightSide
        {R}{R}{R}
        {R}{R}{R}
        {R}{R}{R}
    \BackSide
        {B}{B}{B}
        {B}{B}{B}
        {B}{B}{B}
    \LeftSide
        {L}{L}{L}
        {L}{L}{L}
        {L}{L}{L}
    \DownSide
        {D}{D}{D}
        {D}{D}{D}
        {D}{D}{D}
    \BuildCube
}